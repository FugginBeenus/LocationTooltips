plugins {
    id 'fabric-loom' version '1.6.12'
    id 'maven-publish'
}

version = project.mod_version
group   = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = "https://maven.nucleoid.xyz/" }
    maven { url = "https://maven.terraformersmc.com/" }  // Mod Menu
    maven { url = "https://maven.shedaniel.me/" }        // Cloth Config
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "me.lucko:fabric-permissions-api:0.2-SNAPSHOT"
    modImplementation "com.terraformersmc:modmenu:7.2.2"
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:11.1.106") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

loom {
    // split client/main sources (optional but nice)
    splitEnvironmentSourceSets()

    runs {
        client {
            client()
            configName = "Location Tooltip Client"
            runDir = "run"
            // Uncomment to silence native-access warning on some JDKs:
            // jvmArgs += ["--enable-native-access=ALL-UNNAMED"]
        }
        server {
            server()
            configName = "Location Tooltip Server"
            runDir = "run"
        }
    }
}

// --------- Java / compile options ---------
java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
    options.encoding = "UTF-8"
}

// --------- Resources: expand versions into fabric.mod.json ---------
processResources {
    inputs.property "version",            project.version
    inputs.property "minecraft_version",  project.minecraft_version
    inputs.property "loader_version",     project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand (
                "version":            project.version,
                "minecraft_version":  project.minecraft_version,
                "loader_version":     project.loader_version
        )
    }
}

// Optional: attach LICENSE into the jar (adjust name if you want)
jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}

// --------- Publishing (optional scaffold) ---------
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {
        // add your target maven repo here if/when you publish
    }
}